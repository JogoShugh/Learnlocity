// Generated by CoffeeScript 1.6.2
(function() {
  module.exports = {
    messageTypes: {},
    messageHandlers: {},
    eventSubscribers: [],
    registerMessage: function(messageName, messageConstructor) {
      return this.messageTypes[messageName] = messageConstructor;
    },
    listen: function(topic, subscriberCallback) {
      return this.eventSubscribers.push({
        topic: topic,
        callback: subscriberCallback
      });
    },
    on: function(message, callback) {
      return this.messageHandlers[message] = callback;
    },
    send: function(messageName, message) {
      var handler;

      handler = this.messageHandlers[messageName];
      if (handler != null) {
        return handler(message);
      } else {
        return console.log('No handler found for message name: ' + messageName);
      }
    },
    processMessage: function(messageName, messageConstructorArguments) {
      var cmd, key, value;

      cmd = new this.messageTypes[messageName];
      for (key in messageConstructorArguments) {
        value = messageConstructorArguments[key];
        cmd[key] = value;
      }
      return this.send(messageName, cmd);
    }
  };

}).call(this);
